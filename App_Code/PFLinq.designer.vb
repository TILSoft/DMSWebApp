'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18449
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DMSDAQ150423r2")>  _
Partial Public Class PFLinqDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblPFTask(instance As tblPFTask)
    End Sub
  Partial Private Sub UpdatetblPFTask(instance As tblPFTask)
    End Sub
  Partial Private Sub DeletetblPFTask(instance As tblPFTask)
    End Sub
  Partial Private Sub InserttblPFTasksExecute(instance As tblPFTasksExecute)
    End Sub
  Partial Private Sub UpdatetblPFTasksExecute(instance As tblPFTasksExecute)
    End Sub
  Partial Private Sub DeletetblPFTasksExecute(instance As tblPFTasksExecute)
    End Sub
  Partial Private Sub InserttblActivity(instance As tblActivity)
    End Sub
  Partial Private Sub UpdatetblActivity(instance As tblActivity)
    End Sub
  Partial Private Sub DeletetblActivity(instance As tblActivity)
    End Sub
  Partial Private Sub InserttblFormat(instance As tblFormat)
    End Sub
  Partial Private Sub UpdatetblFormat(instance As tblFormat)
    End Sub
  Partial Private Sub DeletetblFormat(instance As tblFormat)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DowntimeDBv2ConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblPFTasks() As System.Data.Linq.Table(Of tblPFTask)
		Get
			Return Me.GetTable(Of tblPFTask)
		End Get
	End Property
	
	Public ReadOnly Property tblPFTasksExecutes() As System.Data.Linq.Table(Of tblPFTasksExecute)
		Get
			Return Me.GetTable(Of tblPFTasksExecute)
		End Get
	End Property
	
	Public ReadOnly Property tblActivities() As System.Data.Linq.Table(Of tblActivity)
		Get
			Return Me.GetTable(Of tblActivity)
		End Get
	End Property
	
	Public ReadOnly Property tblFormats() As System.Data.Linq.Table(Of tblFormat)
		Get
			Return Me.GetTable(Of tblFormat)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPFTasks")>  _
Partial Public Class tblPFTask
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TaskID As Integer
	
	Private _PFID As System.Nullable(Of Integer)
	
	Private _TaskName As String
	
	Private _TaskResp As String
	
	Private _TaskPrecedent As System.Nullable(Of Integer)
	
	Private _TaskOrder As System.Nullable(Of Integer)
	
	Private _TaskStartDate As System.Nullable(Of Date)
	
	Private _TaskEndDate As System.Nullable(Of Date)
	
	Private _TaskStatus As System.Nullable(Of Integer)
	
	Private _TaskPercentComplete As System.Nullable(Of Integer)
	
	Private _TaskDuration As System.Nullable(Of Integer)
	
	Private _TaskElapsedDays As System.Nullable(Of Boolean)
	
	Private _TaskFixedStart As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTaskIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTaskIDChanged()
    End Sub
    Partial Private Sub OnPFIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPFIDChanged()
    End Sub
    Partial Private Sub OnTaskNameChanging(value As String)
    End Sub
    Partial Private Sub OnTaskNameChanged()
    End Sub
    Partial Private Sub OnTaskRespChanging(value As String)
    End Sub
    Partial Private Sub OnTaskRespChanged()
    End Sub
    Partial Private Sub OnTaskPrecedentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskPrecedentChanged()
    End Sub
    Partial Private Sub OnTaskOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskOrderChanged()
    End Sub
    Partial Private Sub OnTaskStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTaskStartDateChanged()
    End Sub
    Partial Private Sub OnTaskEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTaskEndDateChanged()
    End Sub
    Partial Private Sub OnTaskStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskStatusChanged()
    End Sub
    Partial Private Sub OnTaskPercentCompleteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskPercentCompleteChanged()
    End Sub
    Partial Private Sub OnTaskDurationChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskDurationChanged()
    End Sub
    Partial Private Sub OnTaskElapsedDaysChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTaskElapsedDaysChanged()
    End Sub
    Partial Private Sub OnTaskFixedStartChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTaskFixedStartChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TaskID() As Integer
		Get
			Return Me._TaskID
		End Get
		Set
			If ((Me._TaskID = value)  _
						= false) Then
				Me.OnTaskIDChanging(value)
				Me.SendPropertyChanging
				Me._TaskID = value
				Me.SendPropertyChanged("TaskID")
				Me.OnTaskIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PFID", DbType:="Int")>  _
	Public Property PFID() As System.Nullable(Of Integer)
		Get
			Return Me._PFID
		End Get
		Set
			If (Me._PFID.Equals(value) = false) Then
				Me.OnPFIDChanging(value)
				Me.SendPropertyChanging
				Me._PFID = value
				Me.SendPropertyChanged("PFID")
				Me.OnPFIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskName", DbType:="NVarChar(200)")>  _
	Public Property TaskName() As String
		Get
			Return Me._TaskName
		End Get
		Set
			If (String.Equals(Me._TaskName, value) = false) Then
				Me.OnTaskNameChanging(value)
				Me.SendPropertyChanging
				Me._TaskName = value
				Me.SendPropertyChanged("TaskName")
				Me.OnTaskNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskResp", DbType:="NVarChar(50)")>  _
	Public Property TaskResp() As String
		Get
			Return Me._TaskResp
		End Get
		Set
			If (String.Equals(Me._TaskResp, value) = false) Then
				Me.OnTaskRespChanging(value)
				Me.SendPropertyChanging
				Me._TaskResp = value
				Me.SendPropertyChanged("TaskResp")
				Me.OnTaskRespChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskPrecedent", DbType:="Int")>  _
	Public Property TaskPrecedent() As System.Nullable(Of Integer)
		Get
			Return Me._TaskPrecedent
		End Get
		Set
			If (Me._TaskPrecedent.Equals(value) = false) Then
				Me.OnTaskPrecedentChanging(value)
				Me.SendPropertyChanging
				Me._TaskPrecedent = value
				Me.SendPropertyChanged("TaskPrecedent")
				Me.OnTaskPrecedentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskOrder", DbType:="Int")>  _
	Public Property TaskOrder() As System.Nullable(Of Integer)
		Get
			Return Me._TaskOrder
		End Get
		Set
			If (Me._TaskOrder.Equals(value) = false) Then
				Me.OnTaskOrderChanging(value)
				Me.SendPropertyChanging
				Me._TaskOrder = value
				Me.SendPropertyChanged("TaskOrder")
				Me.OnTaskOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskStartDate", DbType:="DateTime")>  _
	Public Property TaskStartDate() As System.Nullable(Of Date)
		Get
			Return Me._TaskStartDate
		End Get
		Set
			If (Me._TaskStartDate.Equals(value) = false) Then
				Me.OnTaskStartDateChanging(value)
				Me.SendPropertyChanging
				Me._TaskStartDate = value
				Me.SendPropertyChanged("TaskStartDate")
				Me.OnTaskStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskEndDate", DbType:="DateTime")>  _
	Public Property TaskEndDate() As System.Nullable(Of Date)
		Get
			Return Me._TaskEndDate
		End Get
		Set
			If (Me._TaskEndDate.Equals(value) = false) Then
				Me.OnTaskEndDateChanging(value)
				Me.SendPropertyChanging
				Me._TaskEndDate = value
				Me.SendPropertyChanged("TaskEndDate")
				Me.OnTaskEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskStatus", DbType:="Int")>  _
	Public Property TaskStatus() As System.Nullable(Of Integer)
		Get
			Return Me._TaskStatus
		End Get
		Set
			If (Me._TaskStatus.Equals(value) = false) Then
				Me.OnTaskStatusChanging(value)
				Me.SendPropertyChanging
				Me._TaskStatus = value
				Me.SendPropertyChanged("TaskStatus")
				Me.OnTaskStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskPercentComplete", DbType:="Int")>  _
	Public Property TaskPercentComplete() As System.Nullable(Of Integer)
		Get
			Return Me._TaskPercentComplete
		End Get
		Set
			If (Me._TaskPercentComplete.Equals(value) = false) Then
				Me.OnTaskPercentCompleteChanging(value)
				Me.SendPropertyChanging
				Me._TaskPercentComplete = value
				Me.SendPropertyChanged("TaskPercentComplete")
				Me.OnTaskPercentCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskDuration", DbType:="Int")>  _
	Public Property TaskDuration() As System.Nullable(Of Integer)
		Get
			Return Me._TaskDuration
		End Get
		Set
			If (Me._TaskDuration.Equals(value) = false) Then
				Me.OnTaskDurationChanging(value)
				Me.SendPropertyChanging
				Me._TaskDuration = value
				Me.SendPropertyChanged("TaskDuration")
				Me.OnTaskDurationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskElapsedDays", DbType:="Bit")>  _
	Public Property TaskElapsedDays() As System.Nullable(Of Boolean)
		Get
			Return Me._TaskElapsedDays
		End Get
		Set
			If (Me._TaskElapsedDays.Equals(value) = false) Then
				Me.OnTaskElapsedDaysChanging(value)
				Me.SendPropertyChanging
				Me._TaskElapsedDays = value
				Me.SendPropertyChanged("TaskElapsedDays")
				Me.OnTaskElapsedDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskFixedStart", DbType:="Bit")>  _
	Public Property TaskFixedStart() As System.Nullable(Of Boolean)
		Get
			Return Me._TaskFixedStart
		End Get
		Set
			If (Me._TaskFixedStart.Equals(value) = false) Then
				Me.OnTaskFixedStartChanging(value)
				Me.SendPropertyChanging
				Me._TaskFixedStart = value
				Me.SendPropertyChanged("TaskFixedStart")
				Me.OnTaskFixedStartChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPFTasksExecute")>  _
Partial Public Class tblPFTasksExecute
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TaskExecuteID As Integer
	
	Private _TaskID As System.Nullable(Of Integer)
	
	Private _PFID As System.Nullable(Of Integer)
	
	Private _TaskName As String
	
	Private _TaskResp As String
	
	Private _TaskPrecedent As System.Nullable(Of Integer)
	
	Private _TaskOrder As System.Nullable(Of Integer)
	
	Private _TaskStartDate As System.Nullable(Of Date)
	
	Private _TaskEndDate As System.Nullable(Of Date)
	
	Private _TaskStatus As System.Nullable(Of Integer)
	
	Private _TaskPercentComplete As System.Nullable(Of Integer)
	
	Private _TaskDuration As System.Nullable(Of Integer)
	
	Private _TaskElapsedDays As System.Nullable(Of Boolean)
	
	Private _TaskFixedStart As System.Nullable(Of Boolean)
	
	Private _ActivityID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTaskExecuteIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTaskExecuteIDChanged()
    End Sub
    Partial Private Sub OnTaskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskIDChanged()
    End Sub
    Partial Private Sub OnPFIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPFIDChanged()
    End Sub
    Partial Private Sub OnTaskNameChanging(value As String)
    End Sub
    Partial Private Sub OnTaskNameChanged()
    End Sub
    Partial Private Sub OnTaskRespChanging(value As String)
    End Sub
    Partial Private Sub OnTaskRespChanged()
    End Sub
    Partial Private Sub OnTaskPrecedentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskPrecedentChanged()
    End Sub
    Partial Private Sub OnTaskOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskOrderChanged()
    End Sub
    Partial Private Sub OnTaskStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTaskStartDateChanged()
    End Sub
    Partial Private Sub OnTaskEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTaskEndDateChanged()
    End Sub
    Partial Private Sub OnTaskStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskStatusChanged()
    End Sub
    Partial Private Sub OnTaskPercentCompleteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskPercentCompleteChanged()
    End Sub
    Partial Private Sub OnTaskDurationChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTaskDurationChanged()
    End Sub
    Partial Private Sub OnTaskElapsedDaysChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTaskElapsedDaysChanged()
    End Sub
    Partial Private Sub OnTaskFixedStartChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTaskFixedStartChanged()
    End Sub
    Partial Private Sub OnActivityIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnActivityIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskExecuteID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TaskExecuteID() As Integer
		Get
			Return Me._TaskExecuteID
		End Get
		Set
			If ((Me._TaskExecuteID = value)  _
						= false) Then
				Me.OnTaskExecuteIDChanging(value)
				Me.SendPropertyChanging
				Me._TaskExecuteID = value
				Me.SendPropertyChanged("TaskExecuteID")
				Me.OnTaskExecuteIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskID", DbType:="Int")>  _
	Public Property TaskID() As System.Nullable(Of Integer)
		Get
			Return Me._TaskID
		End Get
		Set
			If (Me._TaskID.Equals(value) = false) Then
				Me.OnTaskIDChanging(value)
				Me.SendPropertyChanging
				Me._TaskID = value
				Me.SendPropertyChanged("TaskID")
				Me.OnTaskIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PFID", DbType:="Int")>  _
	Public Property PFID() As System.Nullable(Of Integer)
		Get
			Return Me._PFID
		End Get
		Set
			If (Me._PFID.Equals(value) = false) Then
				Me.OnPFIDChanging(value)
				Me.SendPropertyChanging
				Me._PFID = value
				Me.SendPropertyChanged("PFID")
				Me.OnPFIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskName", DbType:="NVarChar(200)")>  _
	Public Property TaskName() As String
		Get
			Return Me._TaskName
		End Get
		Set
			If (String.Equals(Me._TaskName, value) = false) Then
				Me.OnTaskNameChanging(value)
				Me.SendPropertyChanging
				Me._TaskName = value
				Me.SendPropertyChanged("TaskName")
				Me.OnTaskNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskResp", DbType:="NVarChar(50)")>  _
	Public Property TaskResp() As String
		Get
			Return Me._TaskResp
		End Get
		Set
			If (String.Equals(Me._TaskResp, value) = false) Then
				Me.OnTaskRespChanging(value)
				Me.SendPropertyChanging
				Me._TaskResp = value
				Me.SendPropertyChanged("TaskResp")
				Me.OnTaskRespChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskPrecedent", DbType:="Int")>  _
	Public Property TaskPrecedent() As System.Nullable(Of Integer)
		Get
			Return Me._TaskPrecedent
		End Get
		Set
			If (Me._TaskPrecedent.Equals(value) = false) Then
				Me.OnTaskPrecedentChanging(value)
				Me.SendPropertyChanging
				Me._TaskPrecedent = value
				Me.SendPropertyChanged("TaskPrecedent")
				Me.OnTaskPrecedentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskOrder", DbType:="Int")>  _
	Public Property TaskOrder() As System.Nullable(Of Integer)
		Get
			Return Me._TaskOrder
		End Get
		Set
			If (Me._TaskOrder.Equals(value) = false) Then
				Me.OnTaskOrderChanging(value)
				Me.SendPropertyChanging
				Me._TaskOrder = value
				Me.SendPropertyChanged("TaskOrder")
				Me.OnTaskOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskStartDate", DbType:="DateTime")>  _
	Public Property TaskStartDate() As System.Nullable(Of Date)
		Get
			Return Me._TaskStartDate
		End Get
		Set
			If (Me._TaskStartDate.Equals(value) = false) Then
				Me.OnTaskStartDateChanging(value)
				Me.SendPropertyChanging
				Me._TaskStartDate = value
				Me.SendPropertyChanged("TaskStartDate")
				Me.OnTaskStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskEndDate", DbType:="DateTime")>  _
	Public Property TaskEndDate() As System.Nullable(Of Date)
		Get
			Return Me._TaskEndDate
		End Get
		Set
			If (Me._TaskEndDate.Equals(value) = false) Then
				Me.OnTaskEndDateChanging(value)
				Me.SendPropertyChanging
				Me._TaskEndDate = value
				Me.SendPropertyChanged("TaskEndDate")
				Me.OnTaskEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskStatus", DbType:="Int")>  _
	Public Property TaskStatus() As System.Nullable(Of Integer)
		Get
			Return Me._TaskStatus
		End Get
		Set
			If (Me._TaskStatus.Equals(value) = false) Then
				Me.OnTaskStatusChanging(value)
				Me.SendPropertyChanging
				Me._TaskStatus = value
				Me.SendPropertyChanged("TaskStatus")
				Me.OnTaskStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskPercentComplete", DbType:="Int")>  _
	Public Property TaskPercentComplete() As System.Nullable(Of Integer)
		Get
			Return Me._TaskPercentComplete
		End Get
		Set
			If (Me._TaskPercentComplete.Equals(value) = false) Then
				Me.OnTaskPercentCompleteChanging(value)
				Me.SendPropertyChanging
				Me._TaskPercentComplete = value
				Me.SendPropertyChanged("TaskPercentComplete")
				Me.OnTaskPercentCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskDuration", DbType:="Int")>  _
	Public Property TaskDuration() As System.Nullable(Of Integer)
		Get
			Return Me._TaskDuration
		End Get
		Set
			If (Me._TaskDuration.Equals(value) = false) Then
				Me.OnTaskDurationChanging(value)
				Me.SendPropertyChanging
				Me._TaskDuration = value
				Me.SendPropertyChanged("TaskDuration")
				Me.OnTaskDurationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskElapsedDays", DbType:="Bit")>  _
	Public Property TaskElapsedDays() As System.Nullable(Of Boolean)
		Get
			Return Me._TaskElapsedDays
		End Get
		Set
			If (Me._TaskElapsedDays.Equals(value) = false) Then
				Me.OnTaskElapsedDaysChanging(value)
				Me.SendPropertyChanging
				Me._TaskElapsedDays = value
				Me.SendPropertyChanged("TaskElapsedDays")
				Me.OnTaskElapsedDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskFixedStart", DbType:="Bit")>  _
	Public Property TaskFixedStart() As System.Nullable(Of Boolean)
		Get
			Return Me._TaskFixedStart
		End Get
		Set
			If (Me._TaskFixedStart.Equals(value) = false) Then
				Me.OnTaskFixedStartChanging(value)
				Me.SendPropertyChanging
				Me._TaskFixedStart = value
				Me.SendPropertyChanged("TaskFixedStart")
				Me.OnTaskFixedStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityID", DbType:="Int")>  _
	Public Property ActivityID() As System.Nullable(Of Integer)
		Get
			Return Me._ActivityID
		End Get
		Set
			If (Me._ActivityID.Equals(value) = false) Then
				Me.OnActivityIDChanging(value)
				Me.SendPropertyChanging
				Me._ActivityID = value
				Me.SendPropertyChanged("ActivityID")
				Me.OnActivityIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblActivity")>  _
Partial Public Class tblActivity
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ActivityID As Integer
	
	Private _ActivityType As System.Nullable(Of Integer)
	
	Private _LocIDSymp As System.Nullable(Of Integer)
	
	Private _StartTime As System.Nullable(Of Date)
	
	Private _endtime As System.Nullable(Of Date)
	
	Private _txtID As String
	
	Private _PreActivity As System.Nullable(Of Integer)
	
	Private _PostActivity As System.Nullable(Of Integer)
	
	Private _Format As System.Nullable(Of Integer)
	
	Private _GoodProduct As System.Nullable(Of Decimal)
	
	Private _TargetOutput As System.Nullable(Of Decimal)
	
	Private _Waste As System.Nullable(Of Decimal)
	
	Private _StartSign As System.Nullable(Of Integer)
	
	Private _StartSignTime As System.Nullable(Of Date)
	
	Private _EndSign As System.Nullable(Of Integer)
	
	Private _EndSigntime As System.Nullable(Of Date)
	
	Private _StartCount As System.Nullable(Of Integer)
	
	Private _EndCount As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnActivityIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnActivityIDChanged()
    End Sub
    Partial Private Sub OnActivityTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnActivityTypeChanged()
    End Sub
    Partial Private Sub OnLocIDSympChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLocIDSympChanged()
    End Sub
    Partial Private Sub OnStartTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartTimeChanged()
    End Sub
    Partial Private Sub OnendtimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnendtimeChanged()
    End Sub
    Partial Private Sub OntxtIDChanging(value As String)
    End Sub
    Partial Private Sub OntxtIDChanged()
    End Sub
    Partial Private Sub OnPreActivityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPreActivityChanged()
    End Sub
    Partial Private Sub OnPostActivityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPostActivityChanged()
    End Sub
    Partial Private Sub OnFormatChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFormatChanged()
    End Sub
    Partial Private Sub OnGoodProductChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGoodProductChanged()
    End Sub
    Partial Private Sub OnTargetOutputChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTargetOutputChanged()
    End Sub
    Partial Private Sub OnWasteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnWasteChanged()
    End Sub
    Partial Private Sub OnStartSignChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStartSignChanged()
    End Sub
    Partial Private Sub OnStartSignTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartSignTimeChanged()
    End Sub
    Partial Private Sub OnEndSignChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEndSignChanged()
    End Sub
    Partial Private Sub OnEndSigntimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndSigntimeChanged()
    End Sub
    Partial Private Sub OnStartCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStartCountChanged()
    End Sub
    Partial Private Sub OnEndCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEndCountChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ActivityID() As Integer
		Get
			Return Me._ActivityID
		End Get
		Set
			If ((Me._ActivityID = value)  _
						= false) Then
				Me.OnActivityIDChanging(value)
				Me.SendPropertyChanging
				Me._ActivityID = value
				Me.SendPropertyChanged("ActivityID")
				Me.OnActivityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityType", DbType:="Int")>  _
	Public Property ActivityType() As System.Nullable(Of Integer)
		Get
			Return Me._ActivityType
		End Get
		Set
			If (Me._ActivityType.Equals(value) = false) Then
				Me.OnActivityTypeChanging(value)
				Me.SendPropertyChanging
				Me._ActivityType = value
				Me.SendPropertyChanged("ActivityType")
				Me.OnActivityTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocIDSymp", DbType:="Int")>  _
	Public Property LocIDSymp() As System.Nullable(Of Integer)
		Get
			Return Me._LocIDSymp
		End Get
		Set
			If (Me._LocIDSymp.Equals(value) = false) Then
				Me.OnLocIDSympChanging(value)
				Me.SendPropertyChanging
				Me._LocIDSymp = value
				Me.SendPropertyChanged("LocIDSymp")
				Me.OnLocIDSympChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartTime", DbType:="DateTime")>  _
	Public Property StartTime() As System.Nullable(Of Date)
		Get
			Return Me._StartTime
		End Get
		Set
			If (Me._StartTime.Equals(value) = false) Then
				Me.OnStartTimeChanging(value)
				Me.SendPropertyChanging
				Me._StartTime = value
				Me.SendPropertyChanged("StartTime")
				Me.OnStartTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_endtime", DbType:="DateTime")>  _
	Public Property endtime() As System.Nullable(Of Date)
		Get
			Return Me._endtime
		End Get
		Set
			If (Me._endtime.Equals(value) = false) Then
				Me.OnendtimeChanging(value)
				Me.SendPropertyChanging
				Me._endtime = value
				Me.SendPropertyChanged("endtime")
				Me.OnendtimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtID", DbType:="NVarChar(50)")>  _
	Public Property txtID() As String
		Get
			Return Me._txtID
		End Get
		Set
			If (String.Equals(Me._txtID, value) = false) Then
				Me.OntxtIDChanging(value)
				Me.SendPropertyChanging
				Me._txtID = value
				Me.SendPropertyChanged("txtID")
				Me.OntxtIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreActivity", DbType:="Int")>  _
	Public Property PreActivity() As System.Nullable(Of Integer)
		Get
			Return Me._PreActivity
		End Get
		Set
			If (Me._PreActivity.Equals(value) = false) Then
				Me.OnPreActivityChanging(value)
				Me.SendPropertyChanging
				Me._PreActivity = value
				Me.SendPropertyChanged("PreActivity")
				Me.OnPreActivityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostActivity", DbType:="Int")>  _
	Public Property PostActivity() As System.Nullable(Of Integer)
		Get
			Return Me._PostActivity
		End Get
		Set
			If (Me._PostActivity.Equals(value) = false) Then
				Me.OnPostActivityChanging(value)
				Me.SendPropertyChanging
				Me._PostActivity = value
				Me.SendPropertyChanged("PostActivity")
				Me.OnPostActivityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Format", DbType:="Int")>  _
	Public Property Format() As System.Nullable(Of Integer)
		Get
			Return Me._Format
		End Get
		Set
			If (Me._Format.Equals(value) = false) Then
				Me.OnFormatChanging(value)
				Me.SendPropertyChanging
				Me._Format = value
				Me.SendPropertyChanged("Format")
				Me.OnFormatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoodProduct", DbType:="Decimal(10,2)")>  _
	Public Property GoodProduct() As System.Nullable(Of Decimal)
		Get
			Return Me._GoodProduct
		End Get
		Set
			If (Me._GoodProduct.Equals(value) = false) Then
				Me.OnGoodProductChanging(value)
				Me.SendPropertyChanging
				Me._GoodProduct = value
				Me.SendPropertyChanged("GoodProduct")
				Me.OnGoodProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TargetOutput", DbType:="Decimal(10,2)")>  _
	Public Property TargetOutput() As System.Nullable(Of Decimal)
		Get
			Return Me._TargetOutput
		End Get
		Set
			If (Me._TargetOutput.Equals(value) = false) Then
				Me.OnTargetOutputChanging(value)
				Me.SendPropertyChanging
				Me._TargetOutput = value
				Me.SendPropertyChanged("TargetOutput")
				Me.OnTargetOutputChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Waste", DbType:="Decimal(10,2)")>  _
	Public Property Waste() As System.Nullable(Of Decimal)
		Get
			Return Me._Waste
		End Get
		Set
			If (Me._Waste.Equals(value) = false) Then
				Me.OnWasteChanging(value)
				Me.SendPropertyChanging
				Me._Waste = value
				Me.SendPropertyChanged("Waste")
				Me.OnWasteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartSign", DbType:="Int")>  _
	Public Property StartSign() As System.Nullable(Of Integer)
		Get
			Return Me._StartSign
		End Get
		Set
			If (Me._StartSign.Equals(value) = false) Then
				Me.OnStartSignChanging(value)
				Me.SendPropertyChanging
				Me._StartSign = value
				Me.SendPropertyChanged("StartSign")
				Me.OnStartSignChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartSignTime", DbType:="DateTime")>  _
	Public Property StartSignTime() As System.Nullable(Of Date)
		Get
			Return Me._StartSignTime
		End Get
		Set
			If (Me._StartSignTime.Equals(value) = false) Then
				Me.OnStartSignTimeChanging(value)
				Me.SendPropertyChanging
				Me._StartSignTime = value
				Me.SendPropertyChanged("StartSignTime")
				Me.OnStartSignTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndSign", DbType:="Int")>  _
	Public Property EndSign() As System.Nullable(Of Integer)
		Get
			Return Me._EndSign
		End Get
		Set
			If (Me._EndSign.Equals(value) = false) Then
				Me.OnEndSignChanging(value)
				Me.SendPropertyChanging
				Me._EndSign = value
				Me.SendPropertyChanged("EndSign")
				Me.OnEndSignChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndSigntime", DbType:="DateTime")>  _
	Public Property EndSigntime() As System.Nullable(Of Date)
		Get
			Return Me._EndSigntime
		End Get
		Set
			If (Me._EndSigntime.Equals(value) = false) Then
				Me.OnEndSigntimeChanging(value)
				Me.SendPropertyChanging
				Me._EndSigntime = value
				Me.SendPropertyChanged("EndSigntime")
				Me.OnEndSigntimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartCount", DbType:="Int")>  _
	Public Property StartCount() As System.Nullable(Of Integer)
		Get
			Return Me._StartCount
		End Get
		Set
			If (Me._StartCount.Equals(value) = false) Then
				Me.OnStartCountChanging(value)
				Me.SendPropertyChanging
				Me._StartCount = value
				Me.SendPropertyChanged("StartCount")
				Me.OnStartCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndCount", DbType:="Int")>  _
	Public Property EndCount() As System.Nullable(Of Integer)
		Get
			Return Me._EndCount
		End Get
		Set
			If (Me._EndCount.Equals(value) = false) Then
				Me.OnEndCountChanging(value)
				Me.SendPropertyChanging
				Me._EndCount = value
				Me.SendPropertyChanged("EndCount")
				Me.OnEndCountChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblFormat")>  _
Partial Public Class tblFormat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FormatID As Integer
	
	Private _FormatDesc As String
	
	Private _LocID As System.Nullable(Of Integer)
	
	Private _OperationRatePerMin As System.Nullable(Of Decimal)
	
	Private _OperatiionRateBatch As System.Nullable(Of Decimal)
	
	Private _FormatEnabled As System.Nullable(Of Boolean)
	
	Private _StdPersonnel As System.Nullable(Of Integer)
	
	Private _StdTime As System.Nullable(Of Integer)
	
	Private _ActivityType As System.Nullable(Of Integer)
	
	Private _FormatLongDescription As String
	
	Private _outputMultiplier As System.Nullable(Of Decimal)
	
	Private _PFID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFormatIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFormatIDChanged()
    End Sub
    Partial Private Sub OnFormatDescChanging(value As String)
    End Sub
    Partial Private Sub OnFormatDescChanged()
    End Sub
    Partial Private Sub OnLocIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLocIDChanged()
    End Sub
    Partial Private Sub OnOperationRatePerMinChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOperationRatePerMinChanged()
    End Sub
    Partial Private Sub OnOperatiionRateBatchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOperatiionRateBatchChanged()
    End Sub
    Partial Private Sub OnFormatEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFormatEnabledChanged()
    End Sub
    Partial Private Sub OnStdPersonnelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStdPersonnelChanged()
    End Sub
    Partial Private Sub OnStdTimeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStdTimeChanged()
    End Sub
    Partial Private Sub OnActivityTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnActivityTypeChanged()
    End Sub
    Partial Private Sub OnFormatLongDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnFormatLongDescriptionChanged()
    End Sub
    Partial Private Sub OnoutputMultiplierChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnoutputMultiplierChanged()
    End Sub
    Partial Private Sub OnPFIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPFIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormatID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FormatID() As Integer
		Get
			Return Me._FormatID
		End Get
		Set
			If ((Me._FormatID = value)  _
						= false) Then
				Me.OnFormatIDChanging(value)
				Me.SendPropertyChanging
				Me._FormatID = value
				Me.SendPropertyChanged("FormatID")
				Me.OnFormatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormatDesc", DbType:="VarChar(100)")>  _
	Public Property FormatDesc() As String
		Get
			Return Me._FormatDesc
		End Get
		Set
			If (String.Equals(Me._FormatDesc, value) = false) Then
				Me.OnFormatDescChanging(value)
				Me.SendPropertyChanging
				Me._FormatDesc = value
				Me.SendPropertyChanged("FormatDesc")
				Me.OnFormatDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocID", DbType:="Int")>  _
	Public Property LocID() As System.Nullable(Of Integer)
		Get
			Return Me._LocID
		End Get
		Set
			If (Me._LocID.Equals(value) = false) Then
				Me.OnLocIDChanging(value)
				Me.SendPropertyChanging
				Me._LocID = value
				Me.SendPropertyChanged("LocID")
				Me.OnLocIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OperationRatePerMin", DbType:="Decimal(18,3)")>  _
	Public Property OperationRatePerMin() As System.Nullable(Of Decimal)
		Get
			Return Me._OperationRatePerMin
		End Get
		Set
			If (Me._OperationRatePerMin.Equals(value) = false) Then
				Me.OnOperationRatePerMinChanging(value)
				Me.SendPropertyChanging
				Me._OperationRatePerMin = value
				Me.SendPropertyChanged("OperationRatePerMin")
				Me.OnOperationRatePerMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OperatiionRateBatch", DbType:="Decimal(18,3)")>  _
	Public Property OperatiionRateBatch() As System.Nullable(Of Decimal)
		Get
			Return Me._OperatiionRateBatch
		End Get
		Set
			If (Me._OperatiionRateBatch.Equals(value) = false) Then
				Me.OnOperatiionRateBatchChanging(value)
				Me.SendPropertyChanging
				Me._OperatiionRateBatch = value
				Me.SendPropertyChanged("OperatiionRateBatch")
				Me.OnOperatiionRateBatchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormatEnabled", DbType:="Bit")>  _
	Public Property FormatEnabled() As System.Nullable(Of Boolean)
		Get
			Return Me._FormatEnabled
		End Get
		Set
			If (Me._FormatEnabled.Equals(value) = false) Then
				Me.OnFormatEnabledChanging(value)
				Me.SendPropertyChanging
				Me._FormatEnabled = value
				Me.SendPropertyChanged("FormatEnabled")
				Me.OnFormatEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StdPersonnel", DbType:="Int")>  _
	Public Property StdPersonnel() As System.Nullable(Of Integer)
		Get
			Return Me._StdPersonnel
		End Get
		Set
			If (Me._StdPersonnel.Equals(value) = false) Then
				Me.OnStdPersonnelChanging(value)
				Me.SendPropertyChanging
				Me._StdPersonnel = value
				Me.SendPropertyChanged("StdPersonnel")
				Me.OnStdPersonnelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StdTime", DbType:="Int")>  _
	Public Property StdTime() As System.Nullable(Of Integer)
		Get
			Return Me._StdTime
		End Get
		Set
			If (Me._StdTime.Equals(value) = false) Then
				Me.OnStdTimeChanging(value)
				Me.SendPropertyChanging
				Me._StdTime = value
				Me.SendPropertyChanged("StdTime")
				Me.OnStdTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityType", DbType:="Int")>  _
	Public Property ActivityType() As System.Nullable(Of Integer)
		Get
			Return Me._ActivityType
		End Get
		Set
			If (Me._ActivityType.Equals(value) = false) Then
				Me.OnActivityTypeChanging(value)
				Me.SendPropertyChanging
				Me._ActivityType = value
				Me.SendPropertyChanged("ActivityType")
				Me.OnActivityTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormatLongDescription", DbType:="NVarChar(500)")>  _
	Public Property FormatLongDescription() As String
		Get
			Return Me._FormatLongDescription
		End Get
		Set
			If (String.Equals(Me._FormatLongDescription, value) = false) Then
				Me.OnFormatLongDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._FormatLongDescription = value
				Me.SendPropertyChanged("FormatLongDescription")
				Me.OnFormatLongDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_outputMultiplier", DbType:="Decimal(18,0)")>  _
	Public Property outputMultiplier() As System.Nullable(Of Decimal)
		Get
			Return Me._outputMultiplier
		End Get
		Set
			If (Me._outputMultiplier.Equals(value) = false) Then
				Me.OnoutputMultiplierChanging(value)
				Me.SendPropertyChanging
				Me._outputMultiplier = value
				Me.SendPropertyChanged("outputMultiplier")
				Me.OnoutputMultiplierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PFID", DbType:="Int")>  _
	Public Property PFID() As System.Nullable(Of Integer)
		Get
			Return Me._PFID
		End Get
		Set
			If (Me._PFID.Equals(value) = false) Then
				Me.OnPFIDChanging(value)
				Me.SendPropertyChanging
				Me._PFID = value
				Me.SendPropertyChanged("PFID")
				Me.OnPFIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
